{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a1ec80da383d77f55c0e","webpack:///./src/index.js","webpack:///external \"axios\"","webpack:///external \"flat-file-db\"","webpack:///external \"dotenv\""],"names":["process","env","NODE_ENV","require","config","db","sync","MINUTE","request","create","validateStatus","status","headers","Tpt","apiKey","apiSecret","endpoint","fetchToken","url","credentials","client_id","client_secret","grant_type","post","response","data","console","warn","getToken","token","get","expiry","fifteenMinutesFromNow","Date","valueOf","put","access_token","formatHeaders","tokenData","prepareHeaders","defaults","accounts","options","account_id","body","error","statusText","getStatus","getApplicant","applicant_id","updateApplicant","patch","updateAccount","documents","getStatements","getConfirmations","transfers","transfer_id","cancel","delete","params","find","sources","source_id","update","verify","reverify","orders","order_id","portfolio","getCash","getEquities","getHistory","symbolHistory","symbol","market","getSingleQuote","getOptionChain","getIntraday","getEndOfDayHistory","getSplits","getDividends","getMultiQuote","symbols","getHours","date","getBrokerRatings","getEarningsEvents","getEarningSurprises","getFinancials","getCompanyNews","getCompanyOwnership","getCompanyProfile","getCompanyRatios"],"mappings":"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","file":"tpt-api.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"), require(\"flat-file-db\"), require(\"dotenv\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\", \"flat-file-db\", \"dotenv\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tpt\"] = factory(require(\"axios\"), require(\"flat-file-db\"), require(\"dotenv\"));\n\telse\n\t\troot[\"Tpt\"] = factory(root[\"axios\"], root[\"flat-file-db\"], root[\"dotenv\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a1ec80da383d77f55c0e","import axios from 'axios';\nimport flatfile from 'flat-file-db';\n\nif (process.env.NODE_ENV !== 'production') {\n  require('dotenv').config();\n}\n\nconst db = flatfile.sync('/tmp/token.db');\nconst MINUTE = 1000 * 60;\n\nconst request = axios.create({\n  validateStatus: (status) => true,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\nfunction Tpt(apiKey, apiSecret, endpoint) {\n  this.apiKey = apiKey;\n  this.apiSecret = apiSecret;\n  this.endpoint = endpoint;\n\n  this.fetchToken = async function() {\n    try {\n      let url = `${this.endpoint}/oauth/token`;\n      let credentials = {\n        client_id: this.apiKey,\n        client_secret: this.apiSecret,\n        grant_type: 'client_credentials',\n      };\n      let response = await request.post(url, credentials);\n      return response.data;\n    } catch (e) {\n      console.warn(e);\n    }\n  };\n\n  this.getToken = async function() {\n    try {\n      let token = db.get('token');\n      let expiry = db.get('expiry');\n\n      let fifteenMinutesFromNow = new Date(new Date().valueOf() + (15 * MINUTE));\n      if (!token || !expiry || new Date(expiry) < fifteenMinutesFromNow) {\n        let response = await this.fetchToken();\n        db.put('token', response.access_token);\n        db.put('expiry', response.expiry);\n\n        return {\n          token: response.access_token,\n          expiry: response.expiry,\n        };\n      } else {\n        return { token, expiry };\n      }\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  this.formatHeaders = async function() {\n    try {\n      let tokenData = await this.getToken();\n      let token = tokenData.token;\n      return {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      };\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  this.prepareHeaders = async function() {\n    let headers = await this.formatHeaders();\n    request.defaults.headers = headers;\n  }\n\n  this.accounts = {\n    create: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}`;\n        let response = await request.post(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    get: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getStatus: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/status`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getApplicant: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/applicants/${applicant_id}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    updateApplicant: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}`;\n        let response = await request.patch(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    updateAccount: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/applicants/${applicant_id}`;\n        let response = await request.patch(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  };\n\n  this.documents = {\n    getStatements: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/documents/statements`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getConfirmations: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/documents/confirmations`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n  };\n\n  this.transfers = {\n    create: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/transfers/${options.transfer_id}`;\n        let response = await request.post(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    cancel: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/transfers/${options.transfer_id}`;\n        let response = await request.delete(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    get: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/transfers`;\n        let response = await request.get(url, { params: options.params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    find: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/transfers/${options.transfer_id}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n  };\n\n  this.sources = {\n    create: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}`;\n        let response = await request.post(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    delete: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}`;\n        let response = await request.delete(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    get: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources`;\n        let response = await request.get(url, { params: options.params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    find: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    update: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}`;\n        let response = await request.patch(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    verify: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}/verify`;\n        let response = await request.post(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    reverify: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/sources/${options.source_id}/reverify`;\n        let response = await request.post(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n  };\n\n  this.orders = {\n    create: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/orders/${options.order_id}`;\n        let response = await request.post(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    get: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/orders`;\n        let response = await request.get(url, { params: options.params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    find: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/orders/${options.order_id}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    cancel: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/orders/${options.order_id}`;\n        let response = await request.delete(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    update: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/orders/${options.order_id}`;\n        let response = await request.patch(url, options.body);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  };\n\n  this.portfolio = {\n    getCash: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/portfolio/cash/USD`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getEquities: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${options.account_id}/portfolio/equities`;\n        let response = await request.get(url, { params: options.params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getHistory: async ({ account_id, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${account_id}/portfolio/cash/USD/transactions`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    symbolHistory: async ({ account_id, symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/accounts/${account_id}/portfolio/equities/${symbol}/transactions`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    }\n  };\n\n  this.market = {\n    getSingleQuote: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${symbol}/quote`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getOptionChain: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${symbol}/options`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getIntraday: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${symbol}/timeseries/intraday`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getEndOfDayHistory: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbol/${symbol}/timeseries/eod`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getSplits: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbol/${symbol}/splits`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getDividends: async ({ symbol, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbol/${symbol}/dividends`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getMultiQuote: async ({ symbols, params }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/quote?symbols=${symbols}`;\n        let response = await request.get(url, { params });\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getHours: async ({ date }) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/hours/${date}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getBrokerRatings: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/ratings`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getEarningsEvents: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/earnings/events`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getEarningSurprises: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/earnings/surprises`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getFinancials: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/financials`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getCompanyNews: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/news`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getCompanyOwnership: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getCompanyProfile: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/profile`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    getCompanyRatios: async (options) => {\n      try {\n        this.prepareHeaders();\n        let url = `${this.endpoint}/v1/market/symbols/${options.symbol}/company/ratios`;\n        let response = await request.get(url);\n        if (response.status === 200) {\n          return response.data;\n        } else {\n          return { error: response.statusText };\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n  };\n};\n\n\nexport default Tpt;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"flat-file-db\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"flat-file-db\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"dotenv\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"dotenv\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}